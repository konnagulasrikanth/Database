// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;

namespace srikanthkonnagula.Models;

public partial class TrainingManagementSystemContext : DbContext
{
    public TrainingManagementSystemContext()
    {
    }

    public TrainingManagementSystemContext(DbContextOptions<TrainingManagementSystemContext> options)
        : base(options)
    {
    }

    public virtual DbSet<AppliedTrainings> AppliedTrainings { get; set; }

    public virtual DbSet<Attendence> Attendence { get; set; }

    public virtual DbSet<Employee> Employee { get; set; }

    public virtual DbSet<Feedback> Feedback { get; set; }

    public virtual DbSet<ManagerData> ManagerData { get; set; }

    public virtual DbSet<TraineeRegistration> TraineeRegistration { get; set; }

    public virtual DbSet<TrainingData> TrainingData { get; set; }

    public virtual DbSet<UserDetails> UserDetails { get; set; }

    protected override void OnConfiguring(DbContextOptionsBuilder optionsBuilder)
#warning To protect potentially sensitive information in your connection string, you should move it out of source code. You can avoid scaffolding the connection string by using the Name= syntax to read it from configuration - see https://go.microsoft.com/fwlink/?linkid=2131148. For more guidance on storing connection strings, see http://go.microsoft.com/fwlink/?LinkId=723263.
        => optionsBuilder.UseSqlServer("TrustServerCertificate=true;Data Source=ICS-LT-64146D3\\SQLEXPRESS;Initial Catalog=TrainingManagementSystem;Integrated Security=True;Encrypt=True");

    protected override void OnModelCreating(ModelBuilder modelBuilder)
    {
        modelBuilder.Entity<AppliedTrainings>(entity =>
        {
            entity.HasKey(e => e.AppliedTrainingId).HasName("PK__AppliedT__5681D34F76B21DFE");

            entity.Property(e => e.CourseName)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.EndDate).HasColumnType("date");
            entity.Property(e => e.StartDate).HasColumnType("date");

            entity.HasOne(d => d.Employee).WithMany(p => p.AppliedTrainings)
                .HasForeignKey(d => d.EmployeeId)
                .OnDelete(DeleteBehavior.Cascade)
                .HasConstraintName("FK__AppliedTr__EndDa__4D94879B");

            entity.HasOne(d => d.Training).WithMany(p => p.AppliedTrainings)
                .HasForeignKey(d => d.TrainingId)
                .HasConstraintName("FK__AppliedTr__Train__4E88ABD4");
        });

        modelBuilder.Entity<Attendence>(entity =>
        {
            entity.HasKey(e => e.AttendenceId).HasName("PK__Attenden__48B6E3F3A79A1886");

            entity.Property(e => e.Attendence1).HasColumnName("Attendence");
            entity.Property(e => e.Date).HasColumnType("date");

            entity.HasOne(d => d.Employee).WithMany(p => p.Attendence)
                .HasForeignKey(d => d.EmployeeId)
                .OnDelete(DeleteBehavior.Cascade)
                .HasConstraintName("FK__Attendenc__Emplo__49C3F6B7");

            entity.HasOne(d => d.Training).WithMany(p => p.Attendence)
                .HasForeignKey(d => d.TrainingId)
                .OnDelete(DeleteBehavior.Cascade)
                .HasConstraintName("FK__Attendenc__Train__4AB81AF0");
        });

        modelBuilder.Entity<Employee>(entity =>
        {
            entity.HasKey(e => e.EmployeeId).HasName("PK__Employee__7AD04F118E9031C8");

            entity.Property(e => e.Email)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.EmployeeName)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.Mobile)
                .HasMaxLength(10)
                .IsUnicode(false);

            entity.HasOne(d => d.Manager).WithMany(p => p.Employee)
                .HasForeignKey(d => d.ManagerId)
                .HasConstraintName("FK__Employee__Manage__3F466844");

            entity.HasOne(d => d.User).WithMany(p => p.Employee)
                .HasForeignKey(d => d.UserId)
                .OnDelete(DeleteBehavior.Cascade)
                .HasConstraintName("FK__Employee__UserId__3E52440B");
        });

        modelBuilder.Entity<Feedback>(entity =>
        {
            entity.HasKey(e => e.FeedbackId).HasName("PK__Feedback__6A4BEDD645746306");

            entity.Property(e => e.FbMessage)
                .HasMaxLength(250)
                .IsUnicode(false);
            entity.Property(e => e.FeedbackDate).HasColumnType("date");
        });

        modelBuilder.Entity<ManagerData>(entity =>
        {
            entity.HasKey(e => e.ManagerId).HasName("PK__ManagerD__3BA2AAE100480186");

            entity.Property(e => e.ManagerName)
                .HasMaxLength(50)
                .IsUnicode(false);

            entity.HasOne(d => d.User).WithMany(p => p.ManagerData)
                .HasForeignKey(d => d.UserId)
                .OnDelete(DeleteBehavior.Cascade)
                .HasConstraintName("FK__ManagerDa__UserI__3B75D760");
        });

        modelBuilder.Entity<TraineeRegistration>(entity =>
        {
            entity.HasKey(e => e.RegId).HasName("PK__TraineeR__2C6822F86414197E");

            entity.Property(e => e.Reason)
                .HasMaxLength(150)
                .IsUnicode(false);
            entity.Property(e => e.Status)
                .IsRequired()
                .HasMaxLength(20)
                .IsUnicode(false);

            entity.HasOne(d => d.Employee).WithMany(p => p.TraineeRegistration)
                .HasForeignKey(d => d.EmployeeId)
                .OnDelete(DeleteBehavior.Cascade)
                .HasConstraintName("FK__TraineeRe__Emplo__45F365D3");

            entity.HasOne(d => d.Training).WithMany(p => p.TraineeRegistration)
                .HasForeignKey(d => d.TrainingId)
                .OnDelete(DeleteBehavior.Cascade)
                .HasConstraintName("FK__TraineeRe__Train__44FF419A");
        });

        modelBuilder.Entity<TrainingData>(entity =>
        {
            entity.HasKey(e => e.TrainingId).HasName("PK__Training__E8D71D829565F208");

            entity.Property(e => e.CourseName)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.Description)
                .HasMaxLength(250)
                .IsUnicode(false);
            entity.Property(e => e.Enddate).HasColumnType("date");
            entity.Property(e => e.StartDate).HasColumnType("date");
        });

        modelBuilder.Entity<UserDetails>(entity =>
        {
            entity.HasKey(e => e.UserId).HasName("PK__UserDeta__1788CC4C15D3199F");

            entity.Property(e => e.Password)
                .IsRequired()
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.UserName)
                .IsRequired()
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.UserType)
                .IsRequired()
                .HasMaxLength(25)
                .IsUnicode(false);
        });

        OnModelCreatingPartial(modelBuilder);
    }

    partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
}